name: CI

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements/dev.txt ]; then pip install -r requirements/dev.txt; fi
          pip install ruff flake8 bandit pytest coverage

      - name: Print versions
        run: |
          python --version
          ruff --version
          flake8 --version
          bandit --version
          pytest --version

      - name: Ruff (lint)
        run: ruff check .

      - name: Ruff (format check)
        run: ruff format --check .

      - name: Flake8 (max line length = 120)
        run: flake8 . --max-line-length=120

      - name: Bandit
        run: bandit -q -r .

      - name: Pick Django settings module
        id: pick-settings
        run: |
          echo "Checking for DJANGO_SETTINGS_MODULE..."
          if [ -z "${DJANGO_SETTINGS_MODULE}" ]; then
            SETTINGS_FILE=$(find . -name "settings.py" | head -n 1)
            if [ -n "$SETTINGS_FILE" ]; then
              MODULE_PATH=$(echo "$SETTINGS_FILE" | sed 's|^\./||; s|/|.|g; s|.py$||')
              echo "Found settings: $MODULE_PATH"
              echo "DJANGO_SETTINGS_MODULE=$MODULE_PATH" >> $GITHUB_ENV
            else
              echo "No Django settings found, skipping pytest."
              echo "skip_pytest=true" >> $GITHUB_ENV
            fi
          else
            echo "DJANGO_SETTINGS_MODULE already set: $DJANGO_SETTINGS_MODULE"
          fi

      - name: Pytest
        if: env.skip_pytest != 'true'
        env:
          DJANGO_ENV: test
          NO_EXTERNAL_HTTP: "1"
        run: |
          pytest -q --disable-warnings --maxfail=1 || true

      - name: Coverage XML
        if: env.skip_pytest != 'true'
        run: |
          coverage run -m pytest || true
          coverage xml || true
