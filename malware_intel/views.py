from rest_framework import status, viewsets
from rest_framework.response import Response

from . import services
from .serializers import MalwareIndicatorSerializer, MalwareQuerySerializer


class MalwareIntelViewSet(viewsets.ViewSet):
    """
    ViewSet for querying the URLhaus database for malware intelligence.
    """

    serializer_class = MalwareQuerySerializer

    def _handle_query(self, request, query_function):
        serializer = self.serializer_class(data=request.data)
        serializer.is_valid(raise_exception=True)
        query = serializer.validated_data["query"]

        indicator = query_function(query)

        response_serializer = MalwareIndicatorSerializer(indicator)
        return Response(response_serializer.data, status=status.HTTP_200_OK)

    def create_url_query(self, request, *args, **kwargs):
        """
        Handles POST to /api/v1/malware-intel/url/
        """
        return self._handle_query(request, services.query_urlhaus_by_url)

    def create_host_query(self, request, *args, **kwargs):
        """
        Handles POST to /api/v1/malware-intel/host/
        """
        return self._handle_query(request, services.query_urlhaus_by_host)

    def create_hash_query(self, request, *args, **kwargs):
        """
        Handles POST to /api/v1/malware-intel/hash/
        """
        return self._handle_query(request, services.query_urlhaus_by_hash)
