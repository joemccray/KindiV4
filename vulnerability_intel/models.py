import uuid

from django.db import models
from django.utils.translation import gettext_lazy as _


class Vulnerability(models.Model):
    """
    Represents a unique vulnerability, typically identified by a CVE ID.
    """

    id = models.CharField(
        max_length=50, primary_key=True, help_text="e.g., CVE-2021-44228"
    )
    description = models.TextField(null=True, blank=True)
    cvss_v3_score = models.FloatField(null=True, blank=True)
    cvss_v3_vector = models.CharField(max_length=100, null=True, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    last_updated = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.id


class VulnerabilityReference(models.Model):
    """
    Stores a reference URL for a vulnerability.
    """

    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
    vulnerability = models.ForeignKey(
        Vulnerability, on_delete=models.CASCADE, related_name="references"
    )
    url = models.URLField(max_length=2048)

    def __str__(self):
        return self.url


class VulnerabilitySourceData(models.Model):
    """
    Stores the raw JSON data for a vulnerability from a specific source (NVD or Vulners).
    """

    class Source(models.TextChoices):
        NVD = "NVD", _("NIST National Vulnerability Database")
        VULNERS = "VULNERS", _("Vulners Database")

    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
    vulnerability = models.ForeignKey(
        Vulnerability, on_delete=models.CASCADE, related_name="source_data"
    )
    source = models.CharField(max_length=10, choices=Source.choices)
    raw_data = models.JSONField()
    fetched_at = models.DateTimeField(auto_now_add=True)

    class Meta:
        unique_together = ("vulnerability", "source")

    def __str__(self):
        return f"{self.get_source_display()} data for {self.vulnerability.id}"
