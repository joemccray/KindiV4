from rest_framework import mixins, viewsets

from . import services
from .models import Vulnerability
from .serializers import VulnerabilitySerializer


class VulnerabilityViewSet(mixins.RetrieveModelMixin, viewsets.GenericViewSet):
    """
    A read-only ViewSet for retrieving aggregated vulnerability data.
    """

    queryset = Vulnerability.objects.all()
    serializer_class = VulnerabilitySerializer
    lookup_field = "id"

    def retrieve(self, request, *args, **kwargs):
        """
        Overrides the default retrieve to trigger a fetch from the services
        before returning the data.
        """
        cve_id = kwargs.get("id")
        # The service function handles creating/updating the record.
        services.get_vulnerability_intel(cve_id)
        # Now call the original retrieve method to get the (updated) object
        return super().retrieve(request, *args, **kwargs)
